/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package employee.management.system.ui;

import javax.swing.JPanel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JTextField;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import employee.management.system.*;
import javax.swing.*;
import java.awt.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;


public class AttendancePanel extends JPanel {
    private JTextField employeeIdField;
    private JTextField attendanceDateField;
    private JTextField statusField;
   
    
    public AttendancePanel() {
        setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        JLabel employeeIdLabel = new JLabel("Employee ID:");
        gbc.gridx = 0;
        gbc.gridy = 0;
        add(employeeIdLabel, gbc);

        employeeIdField = new JTextField(15);
        gbc.gridx = 1;
        gbc.gridy = 0;
        add(employeeIdField, gbc);

        JLabel attendanceDateLabel = new JLabel("Date (DD-MM-YYYY):");
        gbc.gridx = 0;
        gbc.gridy = 1;
        add(attendanceDateLabel, gbc);

        attendanceDateField = new JTextField(15);
        gbc.gridx = 1;
        gbc.gridy = 1;
        add(attendanceDateField, gbc);

        JLabel statusLabel = new JLabel("Status:");
        gbc.gridx = 0;
        gbc.gridy = 2;
        add(statusLabel, gbc);

        statusField = new JTextField(15);
        gbc.gridx = 1;
        gbc.gridy = 2;
        add(statusField, gbc);

        JButton updateButton = new JButton("Update Attendance");
        updateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String employeeId = employeeIdField.getText();
                String attendanceDate = attendanceDateField.getText();
                String status = statusField.getText();
                processAttendance(employeeId, attendanceDate, status);
            }
        });
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.gridwidth = 2;
        add(updateButton, gbc);
    }
    
    private void processAttendance(String employeeId, String date, String status) {
    try {
        int empId = Integer.parseInt(employeeId); // Use employeeId instead of id
        
        // Parse date from DD-MM-YYYY to Date object
        SimpleDateFormat inputFormat = new SimpleDateFormat("dd-MM-yyyy");
        Date parsedDate = inputFormat.parse(date); // This will throw ParseException if the format is incorrect
            
        // Format date from Date object to YYYY-MM-DD
        SimpleDateFormat outputFormat = new SimpleDateFormat("yyyy-MM-dd");
        String formattedDate = outputFormat.format(parsedDate);

        EmployeeDAO employeeDAO = new EmployeeDAO();
        Employee employee = employeeDAO.getEmployeeByEmployeeId(empId); // Use getEmployeeByEmployeeId method

        if (employee != null) {
            employeeDAO.addAttendance(empId, formattedDate, status); // Use empId as the employee_id
            Attendance attendanceSystem = new Attendance(employee.getId(), empId, formattedDate, status); // Ensure correct reference
            AttendanceObserver observer = new AttendanceObserver();
            attendanceSystem.addObserver(observer);
            attendanceSystem.setEmployeeAttendance(employee); // Notify observers

            JOptionPane.showMessageDialog(this, "Attendance updated for Employee ID: " + employeeId);
        } else {
            JOptionPane.showMessageDialog(this, "Employee not found.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Invalid format. Please enter valid numbers.");
    } catch (ParseException e) {
        JOptionPane.showMessageDialog(this, "Invalid date format. Please use DD-MM-YYYY.");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "An error occurred while updating attendance.");
    }
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
